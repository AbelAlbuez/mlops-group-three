version: '3.8'

services:
  # Base de datos MySQL para MLflow
  mysql-db:
    image: mysql:8.0
    container_name: mysql-simple
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-rootpassword}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-mlflow}
      MYSQL_USER: ${MYSQL_USER:-mlflow}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-mlflow}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql/init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "${MYSQL_USER:-mlflow}", "-p${MYSQL_PASSWORD:-mlflow}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - simple-network

  # Servidor MLflow simple
  mlflow:
    image: python:3.11-slim
    container_name: mlflow-simple
    depends_on:
      mysql-db:
        condition: service_healthy
    command: >
      sh -c "apt-get update &&
      apt-get install -y --no-install-recommends curl &&
      pip install mlflow==3.2.0 pymysql==1.1.0 &&
      sleep 20 &&
      exec mlflow server
      --backend-store-uri mysql+pymysql://${MYSQL_USER:-mlflow}:${MYSQL_PASSWORD:-mlflow}@mysql-db:3306/${MYSQL_DATABASE:-mlflow}
      --artifacts-destination /mlflow/artifacts
      --serve-artifacts
      --host 0.0.0.0
      --port 5000"
    environment:
      - MLFLOW_TRACKING_URI=http://0.0.0.0:5000
    ports:
      - "5000:5000"
    volumes:
      - mlflow_data:/mlflow
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 10s
      timeout: 5s
      retries: 10
    restart: unless-stopped
    networks:
      - simple-network

  # API de inferencia sin l√≠mites de recursos
  inference-api:
    image: ogaston/inference-g3:latest
    container_name: inference-api-simple
    depends_on:
      mlflow:
        condition: service_healthy
    ports:
      - "8000:8000"
    environment:
      - MLFLOW_TRACKING_URI=http://mlflow:5000
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s
    restart: unless-stopped
    networks:
      - simple-network

volumes:
  mysql_data:
    driver: local
  mlflow_data:
    driver: local

networks:
  simple-network:
    driver: bridge
