version: '3.8'

services:
  # Base de datos MySQL para MLflow
  mysql-db:
    image: mysql:8.0
    container_name: mysql-locust
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-rootpassword}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-covertype_db}
      MYSQL_USER: ${MYSQL_USER:-mlflow}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-mlflow}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql/init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "${MYSQL_USER:-mlflow}", "-p${MYSQL_PASSWORD:-mlflow}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - locust-network

  # Servidor MLflow para tracking de modelos
  mlflow:
    image: python:3.11-slim
    container_name: mlflow-locust
    depends_on:
      mysql-db:
        condition: service_healthy
    command: >
      sh -c "apt-get update &&
      apt-get install -y --no-install-recommends curl &&
      pip install mlflow==3.2.0 pymysql==1.1.0 &&
      sleep 20 &&
      exec mlflow server
      --backend-store-uri mysql+pymysql://${MYSQL_USER:-mlflow}:${MYSQL_PASSWORD:-mlflow}@mysql-db:3306/${MYSQL_DATABASE:-covertype_db}
      --artifacts-destination /mlflow/artifacts
      --serve-artifacts
      --host 0.0.0.0
      --port 5000"
    environment:
      - MLFLOW_TRACKING_URI=http://0.0.0.0:5000
    ports:
      - "5002:5000"  # Puerto 5002 para evitar conflictos
    volumes:
      - mlflow_data:/mlflow
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 10s
      timeout: 5s
      retries: 10
    restart: unless-stopped
    networks:
      - locust-network

  # API de inferencia con límites de recursos usando imagen oficial
  inference-api:
    image: ogaston/inference-g3:latest
    platform: linux/amd64
    container_name: inference-api-locust
    depends_on:
      mlflow:
        condition: service_healthy
    ports:
      - "8000:8000"
    environment:
      - MLFLOW_TRACKING_URI=http://mlflow:5000
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s
    restart: unless-stopped
    # Límites de recursos ajustables
    deploy:
      resources:
        limits:
          cpus: '${API_CPU_LIMIT:-0.5}'
          memory: ${API_MEMORY_LIMIT:-512M}
        reservations:
          cpus: '0.25'
          memory: 256M
    networks:
      - locust-network

  # Nginx como load balancer (opcional, para múltiples réplicas)
  nginx:
    image: nginx:alpine
    container_name: nginx-locust
    depends_on:
      - inference-api
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    restart: unless-stopped
    networks:
      - locust-network

  # Master de Locust
  locust-master:
    image: locustio/locust:latest
    container_name: locust-master
    depends_on:
      - inference-api
    ports:
      - "8089:8089"  # Web UI de Locust
    volumes:
      - ./locustfile.py:/mnt/locust/locustfile.py:ro
    command: >
      --master
      --host=http://inference-api:8000
      --web-host=0.0.0.0
      --web-port=8089
      --locustfile=/mnt/locust/locustfile.py
      --users=${LOCUST_USERS:-100}
      --spawn-rate=${LOCUST_SPAWN_RATE:-10}
      --run-time=${LOCUST_RUN_TIME:-60s}
    environment:
      - LOCUST_MASTER=true
    networks:
      - locust-network

  # Worker de Locust (escalable)
  locust-worker:
    image: locustio/locust:latest
    container_name: locust-worker
    depends_on:
      - inference-api
      - locust-master
    volumes:
      - ./locustfile.py:/mnt/locust/locustfile.py:ro
    command: >
      --worker
      --master-host=locust-master
      --host=http://inference-api:8000
      --locustfile=/mnt/locust/locustfile.py
    environment:
      - LOCUST_WORKER=true
    networks:
      - locust-network
    # Escalar con: docker-compose -f docker-compose.locust.yml up --scale locust-worker=3

volumes:
  mysql_data:
    driver: local
  mlflow_data:
    driver: local

networks:
  locust-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
