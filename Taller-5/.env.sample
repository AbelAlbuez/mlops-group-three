# =============================================================================
# CONFIGURACIÓN DE MYSQL
# =============================================================================

# Base de datos principal para covertype
MYSQL_ROOT_PASSWORD=rootpassword
MYSQL_DATABASE=covertype_db
MYSQL_USER=covertype_user
MYSQL_PASSWORD=covertype_pass123
MYSQL_HOST=mysql-db
MYSQL_PORT=3306

# =============================================================================
# CONFIGURACIÓN DE MLFLOW
# =============================================================================

# Puerto de MLflow (5002 para evitar conflicto con otro MLflow en puerto 5000)
MLFLOW_PORT=5002

# URI de tracking de MLflow
MLFLOW_TRACKING_URI=http://mlflow:5000

# Backend store (metadatos en MySQL)
MLFLOW_BACKEND_URI=mysql+pymysql://covertype_user:covertype_pass123@mysql-db:3306/covertype_db

# Ruta de artefactos
MLFLOW_ARTIFACTS_PATH=/mlflow/artifacts

# Nombre del experimento
MLFLOW_EXPERIMENT=covertype_classification

# Nombre del modelo registrado
MLFLOW_MODEL_NAME=covertype_classifier

# Stage al que promover el modelo (Production, Staging, None)
PROMOTE_TO_STAGE=Production

# =============================================================================
# CONFIGURACIÓN DE LA API DE INFERENCIA
# =============================================================================

# Imagen de la API
INFER_IMAGE=ogaston/inference-g3:latest

# Puerto de la API
INFERENCE_PORT=8000

# =============================================================================
# CONFIGURACIÓN DE DATOS
# =============================================================================

# Ruta al archivo CSV de covertype (si aplica)
P2_CSV_PATH=/app/covertype.csv

# API base para obtener datos (opcional)
P2_API_BASE=

# Path de la API
P2_API_PATH=/api/covertype

# Group ID
P2_GROUP_ID=3

# =============================================================================
# CONFIGURACIÓN DE ENTRENAMIENTO
# =============================================================================

# Random state para reproducibilidad
P2_RANDOM_STATE=42

# Tamaño del test set (0.2 = 20%)
P2_TEST_SIZE=0.2

# Incremento mínimo de muestras para reentrenar (0 = siempre entrenar)
P2_MIN_SAMPLE_INCREMENT=0

# =============================================================================
# CONFIGURACIÓN DE LOCUST (Para pruebas de carga)
# =============================================================================

# Límites de CPU para la API
API_CPU_LIMIT=0.5

# Límites de memoria para la API
API_MEMORY_LIMIT=512M

# Usuarios concurrentes
LOCUST_USERS=100

# Tasa de spawn
LOCUST_SPAWN_RATE=10

# Tiempo de ejecución
LOCUST_RUN_TIME=60s

# =============================================================================
# CONFIGURACIÓN DE RED
# =============================================================================

# Nombre del proyecto (Docker Compose usa esto para los nombres de red)
COMPOSE_PROJECT_NAME=taller-5